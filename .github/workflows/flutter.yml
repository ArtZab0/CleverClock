name: Flutter CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Flutter using subosito/flutter-action
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5' # Ensure this matches your project's Flutter version

      # Step 3: Verify Flutter installation
      - name: Verify Flutter
        run: flutter --version

      # Step 4: Install Flutter dependencies
      - name: Install Dependencies
        run: flutter pub get

      # Step 5: Run Flutter tests with coverage
      - name: Run Unit Tests with Coverage
        run: flutter test --coverage

      # Step 6: Verify coverage directory and lcov.info file
      - name: Verify Coverage Report
        run: |
          echo "Current working directory:"
          pwd
          echo "Listing coverage directory:"
          ls -al coverage
          echo "Checking for lcov.info:"
          if [ -f coverage/lcov.info ]; then
            echo "lcov.info found."
          else
            echo "lcov.info not found!"
            exit 1
          fi

      # Step 7: Convert LCOV to CSV using test_cov_console
      - name: Convert Coverage to CSV
        run: |
          # Activate test_cov_console globally
          dart pub global activate test_cov_console

          # Add the Dart pub cache to PATH
          echo "$HOME/.pub-cache/bin" >> $GITHUB_PATH

          # List the current directory
          echo "Current working directory before converting coverage:"
          pwd

          # List coverage directory
          echo "Listing coverage directory:"
          ls -al coverage

          # Convert lcov.info to coverage.csv with absolute path
          test_cov_console --file="${GITHUB_WORKSPACE}/coverage/lcov.info" --multi -c , --output="${GITHUB_WORKSPACE}/coverage/coverage.csv"

      # Step 8: Verify coverage.csv file
      - name: Verify Coverage CSV
        run: |
          echo "Listing coverage directory after CSV conversion:"
          ls -al coverage
          echo "Checking for coverage.csv:"
          if [ -f coverage/coverage.csv ]; then
            echo "coverage.csv found."
          else
            echo "coverage.csv not found!"
            exit 1
          fi

      # Step 9: Upload the CSV as an artifact
      - name: Upload Coverage CSV
        uses: actions/upload-artifact@v3
        with:
          name: coverage-csv
          path: coverage/coverage.csv

      # Step 10: Set up Python for graph generation
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Step 11: Install Python dependencies
      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 12: Generate Coverage Graph using Python script
      - name: Generate Coverage Graph
        run: |
          python scripts/generate_coverage_graph.py coverage/coverage.csv coverage/coverage.png

      # Step 13: Verify the generated graph
      - name: Verify Coverage Graph
        run: |
          echo "Listing coverage directory after graph generation:"
          ls -al coverage
          echo "Checking for coverage.png:"
          if [ -f coverage/coverage.png ]; then
            echo "coverage.png found."
          else
            echo "coverage.png not found!"
            exit 1
          fi

      # Step 14: Upload the coverage graph as an artifact
      - name: Upload Coverage Graph
        uses: actions/upload-artifact@v3
        with:
          name: coverage-graph
          path: coverage/coverage.png

      # Step 15: Upload the original LCOV report as an artifact
      - name: Upload Coverage Report (LCOV)
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/lcov.info
